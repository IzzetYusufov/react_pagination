{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","components/Select/Select.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","_ref","currentPage","itemsToDisplay","onPageChange","qntyOfCells","length","leftArrowDisable","rightArrowDisable","handleCellClick","event","leftRightArrow","currentTarget","getAttribute","cellValue","innerText","_jsxs","_Fragment","children","className","_jsx","cn","disabled","href","onClick","map","item","active","concat","undefined","selectOptions","Select","selectValue","setOptionPage","resetPage","id","value","onChange","target","option","htmlFor","items","App","_useState","useState","_useState2","_slicedToArray","page","setPage","_useState3","_useState4","perPage","setPerPage","perPageNum","newItems","_toConsumableArray","resultItems","_item","i","slice","itemsPerPage","itemsFrom","shift","itemsTo","pop","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.00a971d5.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import cn from 'classnames';\n\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  currentPage: number,\n  itemsToDisplay: Array<string>[],\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination = ({\n  currentPage,\n  itemsToDisplay,\n  onPageChange,\n}: Props) => {\n  const qntyOfCells = getNumbers(1, itemsToDisplay.length);\n  const leftArrowDisable = currentPage === 1;\n  const rightArrowDisable = currentPage === itemsToDisplay.length;\n\n  const handleCellClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    const leftRightArrow = event.currentTarget.getAttribute('href');\n\n    if (leftRightArrow === '#prev') {\n      return onPageChange(currentPage - 1);\n    }\n\n    if (leftRightArrow === '#next') {\n      return onPageChange(currentPage + 1);\n    }\n\n    const cellValue = +event.currentTarget.innerText;\n\n    return cellValue !== currentPage && onPageChange(cellValue);\n  };\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li\n          className={cn(\n            'page-item',\n            { disabled: leftArrowDisable },\n          )}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={leftArrowDisable}\n            onClick={handleCellClick}\n          >\n            «\n          </a>\n        </li>\n        {qntyOfCells.map(item => (\n          <li\n            key={item}\n            className={cn(\n              'page-item',\n              { active: item === currentPage },\n            )}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${item}`}\n              onClick={handleCellClick}\n            >\n              {item}\n            </a>\n          </li>\n        ))}\n        <li\n          className={cn(\n            'page-item',\n            { disabled: rightArrowDisable },\n          )}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={rightArrowDisable}\n            onClick={handleCellClick}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      {itemsToDisplay[currentPage - 1] !== undefined && (\n        <ul>\n          {itemsToDisplay[currentPage - 1].map(item => (\n            <li\n              data-cy=\"item\"\n              key={item}\n            >\n              {item}\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n","type Props = {\n  selectValue: number,\n  setOptionPage: (value: number) => void,\n  resetPage: (page: number) => void,\n};\n\nconst selectOptions = [3, 5, 10, 20];\n\nexport const Select: React.FC<Props> = ({\n  selectValue,\n  setOptionPage,\n  resetPage,\n}) => (\n  <div className=\"form-group row\">\n    <div className=\"col-3 col-sm-2 col-xl-1\">\n      <select\n        data-cy=\"perPageSelector\"\n        id=\"perPageSelector\"\n        className=\"form-control\"\n        value={selectValue}\n        onChange={(event) => {\n          setOptionPage(+event.target.value);\n          resetPage(1);\n        }}\n      >\n        {selectOptions.map((option: number) => (\n          <option\n            value={option}\n            key={option}\n          >\n            {option}\n          </option>\n        ))}\n      </select>\n    </div>\n\n    <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n      items per page\n    </label>\n  </div>\n);\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\nimport { Select } from './components/Select';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42).map(n => `Item ${n}`);\n\nfunction itemsPerPage(perPageNum: number) {\n  const newItems = [...items];\n  const resultItems: Array<string>[] = [];\n\n  newItems.map((_item, i) => {\n    return i % perPageNum === 0\n      ? resultItems.push([...items].slice(i, (i + perPageNum)))\n      : null;\n  });\n\n  return resultItems;\n}\n\nexport const App: React.FC = () => {\n  const [page, setPage] = useState<number>(1);\n  const [perPage, setPerPage] = useState(5);\n\n  const itemsToDisplay = itemsPerPage(perPage);\n  const itemsFrom = [...itemsToDisplay[page - 1]].shift() as string;\n  const itemsTo = [...itemsToDisplay[page - 1]].pop() as string;\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${page} (items ${+itemsFrom.slice(-2)} - ${+itemsTo.slice(-2)} of ${items.length})`}\n      </p>\n\n      <Select\n        selectValue={perPage}\n        setOptionPage={setPerPage}\n        resetPage={setPage}\n      />\n\n      <Pagination\n        currentPage={page}\n        itemsToDisplay={itemsToDisplay}\n        onPageChange={setPage}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}